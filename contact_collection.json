{
	"info": {
		"_postman_id": "27f0925d-391f-4d81-aad5-af98aed40cbc",
		"name": "Contact List",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18551292"
	},
	"item": [
		{
			"name": "Basic Endpoint Tests",
			"item": [
				{
					"name": "Get Contact List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://3.13.86.142:3000/contacts",
							"protocol": "http",
							"host": [
								"3",
								"13",
								"86",
								"142"
							],
							"port": "3000",
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Contact List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData= pm.response.json();",
									"pm.environment.set(\"contactId\", jsonData._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n         \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"email\": \"jdoe@fake.com\",\n        \"location\": {\n            \"city\": \"Heredia\",\n            \"country\": \"CR\"\n        },\n        \"employer\": {\n            \"jobTitle\": \"QA Automation Tester\",\n            \"company\": \"Google UK\"\n        },\n        \"__v\": 0\n    }\n    ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://3.13.86.142:3000/contacts",
							"protocol": "http",
							"host": [
								"3",
								"13",
								"86",
								"142"
							],
							"port": "3000",
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Correct First name is returned\", function () {",
									"    pm.expect(jsonData.firstName).to.eql(environment.firstName);",
									"});",
									"pm.test(\"Correct Last name is returned\", function () {",
									"    pm.expect(jsonData.lastName).to.eql(environment.lastName);",
									"});",
									"pm.test(\"Correct Email is returned\", function () {",
									"    pm.expect(jsonData.email).to.eql(environment.email);",
									"});",
									"pm.test(\"Correct City name is returned\", function () {",
									"    pm.expect(jsonData.location.city).to.eql(environment.city);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://3.13.86.142:3000/contacts/{{contactId}}",
							"protocol": "http",
							"host": [
								"3",
								"13",
								"86",
								"142"
							],
							"port": "3000",
							"path": [
								"contacts",
								"{{contactId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Contact List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"_id\": \"6304c53ce48c43062f423cc7\",\n        \"firstName\": \"Josue\",\n        \"lastName\": \"Rojas\",\n        \"email\": \"josueRojas@thinkingtester.com\",\n        \"location\": {\n            \"city\": \"Heredia\",\n            \"country\": \"CR\"\n        },\n        \"employer\": {\n            \"jobTitle\": \"QA Automation\",\n            \"company\": \"Google\"\n        },\n        \"__v\": 0\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://3.13.86.142:3000/contacts/630495b6e48c43062f423ba8",
							"protocol": "http",
							"host": [
								"3",
								"13",
								"86",
								"142"
							],
							"port": "3000",
							"path": [
								"contacts",
								"630495b6e48c43062f423ba8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Contact with variable",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"_id\": \"62f8135ae48c43062f42149b\",\n        \"firstName\": \"Josue\",\n        \"lastName\": \"Hodja\",\n        \"email\": \"josueRojas@thinkingtester.com\",\n        \"location\": {\n            \"city\": \"Heredia\",\n            \"country\": \"CR\"\n        },\n        \"employer\": {\n            \"jobTitle\": \"QA Automation\",\n            \"company\": \"Google\"\n        },\n        \"__v\": 0\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://3.13.86.142:3000/contacts/{{contactId}}",
							"protocol": "http",
							"host": [
								"3",
								"13",
								"86",
								"142"
							],
							"port": "3000",
							"path": [
								"contacts",
								"{{contactId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Contact",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://3.13.86.142:3000/contacts/630495b6e48c43062f423ba8",
							"protocol": "http",
							"host": [
								"3",
								"13",
								"86",
								"142"
							],
							"port": "3000",
							"path": [
								"contacts",
								"630495b6e48c43062f423ba8"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Negative Tests",
			"item": [
				{
					"name": "Get Contact Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://3.13.86.142:3000/contacts/1",
							"protocol": "http",
							"host": [
								"3",
								"13",
								"86",
								"142"
							],
							"port": "3000",
							"path": [
								"contacts",
								"1"
							],
							"query": [
								{
									"key": "{{firstName}}",
									"value": null,
									"disabled": true
								},
								{
									"key": "{{lastName}}",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Contact Missing First Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Missing First Name error in returned\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Contacts validation failed: firstName: First Name is required\");",
									"});",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.response.to.have.header(\"Content-Type\",\"application/json; charset=utf-8\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"\",\n    \"lastName\": \"Doe\",\n    \"birthdate\": \"1970-01-01\",\n    \"email\": \"jdoe@fake.com\",\n    \"phone\": \"8005555555\",\n    \"street1\": \"1 Main St.\",\n    \"street2\": \"Apartment A\",\n    \"city\": \"Anytown\",\n    \"stateProvince\": \"KS\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://3.13.86.142:3000/contacts",
							"protocol": "http",
							"host": [
								"3",
								"13",
								"86",
								"142"
							],
							"port": "3000",
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Contact Invalid Email",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"D\",\n    \"birthdate\": \"1970-01-01\",\n    \"email\": \"\",\n    \"phone\": \"8005555555\",\n    \"street1\": \"1 Main St.\",\n    \"street2\": \"Apartment A\",\n    \"city\": \"Anytown\",\n    \"stateProvince\": \"KS\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\",\n    \"employer\": {\n        \"jobtitle\" : \"Software Tester\",\n        \"company\" : \"abcdefghijklmnoprstuvyzabcdewq\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://3.13.86.142:3000/contacts",
							"protocol": "http",
							"host": [
								"3",
								"13",
								"86",
								"142"
							],
							"port": "3000",
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 2000ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(2000);",
					"});"
				]
			}
		}
	]
}